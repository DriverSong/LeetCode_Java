package leetcode;

public class SearchinRotatedSortedArray {
	public int search(int[] nums, int target) {
        int left = 0;
        int right = nums.length - 1;
        int mid = (left + right) / 2;
        int out = mergeFind(left, right, mid, nums, target);
    }

	private int mergeFind(int left, int right, int mid, int[] nums, int target) {
		if (right - left < 2) {
			if (nums[right] == target) return right;
			else if (nums[left] == target) return left;
			else return -1;
		}
		if (target <= nums[right] && target >= nums[left]) {
			mergeFind(mid, right, (mid + right)/2, nums, target);
		}else if (target < nums[right] && target >= nums[left]) {
			mergeFind(left, mid - 1, (left + mid - 1)/2, nums, target);
		}else {
			
		}
	}
}
