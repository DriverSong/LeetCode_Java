package leetcode;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class GroupAnagrams {
	public List<List<String>> groupAnagrams(String[] strs) {
		if (strs.length == 0) return null;
		List<List<String>> out = new ArrayList<>();
		for(int i = 0; i < strs.length; i++) {
			for(int j = 0; j < out.size(); j++) {
				if (myEqual(strs[i], out.get(j).get(0))) {
					out.get(j).add(strs[i]);
					break;
				}
				if (j == out.size()) {
					ArrayList<String> tempList = new ArrayList<>();
					tempList.add(strs[i]);
					out.add(tempList);
					break;
				}
			}
		}
		return out;
    }

	private boolean myEqual(String string1, String string2) {
		if (string1.length() != string2.length()) return false;
		if (string1.length() == 0 && string2.length() == 0) return true;
		int length = string1.length();
		Map<String, Integer> map = new HashMap<>();
		String[] strings1 = string1.split(null);
		String[] strings2 = string2.split(null);
		for(int i = 0; i < length; i++) {
			set.contains(o)
		}
		for(int i = 0; i < length; i++) {
			
		}
		return true;
	}
}
