package leetcode;


class Solution {
    public String convert(String s, int numRows) {//行数
    	String[] s_matrix = s.split("");//字符串转数组
    	int colGroup = 0;//每组的列数
    	int sizeGroup = 0;//每组的大小
    	int numGroup = 0;//组的个数
    	if (numRows%2 == 0) {
    		colGroup = numRows/2;
    		sizeGroup = (numRows+2)*colGroup/sizeGroup;
    	}else {
    		colGroup = (numRows + 1)/2;
    		sizeGroup = (numRows+1)*colGroup/sizeGroup;
    	}
		numGroup = (int)  Math.ceil(new Double(s)/sizeGroup);
    	String[] OutputStream = new String[s.length()];

		for (int i = 0; i < numGroup; i++) {
			for (int j = 0; j < colGroup; j ++) {
				for (int k = 0; k < numRows - 2*j; k++) {
					if ( i*sizeGroup + j < s.length()) {
						if ((j+k)*(j+k+1)*numGroup/2+i*(j+k+1)+j < s.length()) {
							
							OutputStream[(j+k)*(j+k+1)*numGroup/2+i*(j+k+1)+j] = s_matrix[i*sizeGroup + j*colGroup - j*(j-1) + k];
					
						}
					}
				}
			}
		}
    }
    
    public static void main(String[] args) {
    	int a = 5;
    	int b = 4;
    	System.out.println(new Double(a)/b);
    	String c="abcdef";
    	String[] d = c.split("");
    	System.out.println(d[2]);
    	
    }
    
}
