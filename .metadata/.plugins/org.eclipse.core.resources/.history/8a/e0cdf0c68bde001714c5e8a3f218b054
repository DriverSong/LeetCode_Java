package leetcode;

import java.util.HashMap;
import java.util.Map;

public class Valid_Parentheses {
	public static boolean isValid(String s) {
//		int length = s.length();
//		int left = 1;
//		int right = length;
//		boolean flag = true;
//		while(left<=right) {
////			System.out.println(s.charAt(right-1));
////			System.out.println(s.charAt(left-1));
//			if (s.charAt(right-1)- s.charAt(left-1) == 1) {
//				left ++;
//				right --;
//			}else {
//				flag = false;
//				break;
//			}
//		}
////		System.out.println(flag);
//		return flag;
		boolean flag = true;
		int length = s.length();
		int count1 = 0;
		int count2 = 0;
		int count3 = 0;
		int count4 = 0;
		int count5 = 0;
		int count6 = 0;
		for(int i = 0; i < s.length(); i++) {
			if (s.charAt(i) == "(".charAt(0) ) {
				count1 ++;
			}else if (s.charAt(i) == ")".charAt(0)) {
				count2 ++;
			}else if (s.charAt(i) == "[".charAt(0)) {
				count3 ++;
			}else if (s.charAt(i) == "]".charAt(0)) {
				count4 ++;
			}else if (s.charAt(i) == "{".charAt(0)) {
				count5 ++;
			}else {
				count6++;
			}
		}
		if (length < 2) {
			return false;
		}else {
			for (int i = 0; i < s.length() - 1; i++) {
				char a = s.charAt(i);
				char b = s.charAt(i+1);
//				System.out.println("***");
//				System.out.println(a-b);
				if ((a-b) ==  -53 || (a-b) ==  -85 ||(a-b) == 50||(a-b) ==  -34 ||(a-b) ==  30 ||(a-b) ==  82) {
					System.out.println("aaa");
					flag = false;
				}
			}
		}
		if(s.charAt(s.length()-1) == "[".charAt(0) || s.charAt(s.length()-1) == "(".charAt(0) || s.charAt(s.length()-1) == "{".charAt(0) ) {
			flag = false;
			System.out.println("bbb");
		}
			
		if(s.charAt(0) == "]".charAt(0) || s.charAt(0) == ")".charAt(0) || s.charAt(0) == "}".charAt(0)) {
			flag = false;
			System.out.println("ccc");
		}
			
		if(s.length()%2 == 1) {
//			System.out.println(s.length());
			flag = false;
			System.out.println("ddd");
		}
			
//		System.out.println(flag);
		return flag;
    }
	public static void main(String arg[]) {
//		String string = "()[]{}";
//		System.out.println(string.charAt(0)-string.charAt(3));
//		System.out.println(string.charAt(0)-string.charAt(5));
//		System.out.println("---------------------------------------------");
//		System.out.println(string.charAt(2)-string.charAt(1));
//		System.out.println(string.charAt(2)-string.charAt(5));
//		System.out.println("---------------------------------------------");
//		System.out.println(string.charAt(4)-string.charAt(3));
//		System.out.println(string.charAt(4)-string.charAt(1));
//		System.out.println("---------------------------------------------");
		String string = "(([]){})";
		isValid(string);
	}
}
